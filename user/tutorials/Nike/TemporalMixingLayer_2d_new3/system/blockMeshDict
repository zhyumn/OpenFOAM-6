/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;
//Lzby3 1;
//Lz2by3 #calc"$Lzby3*2";
Lx 1.065e-5;
Ly #calc"$Lx *0.6";
//Lz #calc"$Lzby3*3";
Lzm 1.065e-5;
Lztb 1.065e-5;
Lzmby2 #calc"$Lzm/2";
mLzmby2 #calc"-$Lzm/2";
LzT #calc"$Lzmby2 + $Lztb";
mLzT #calc"-$Lzmby2 - $Lztb";

vertices
(
    (  0     0        $mLzT   )    //0
    (  $Lx   0        $mLzT   )    //1
    (  $Lx   $Ly      $mLzT   )    //2
    (  0     $Ly      $mLzT   )    //3
    (  0     0        $mLzmby2)    //4
    (  $Lx   0        $mLzmby2)    //5
    (  $Lx   $Ly      $mLzmby2)    //6
    (  0     $Ly      $mLzmby2)    //7
    (  0     0        $Lzmby2 )    //8
    (  $Lx   0        $Lzmby2 )    //9
    (  $Lx   $Ly      $Lzmby2 )    //10
    (  0     $Ly      $Lzmby2 )    //11
    (  0     0        $LzT    )    //12
    (  $Lx   0        $LzT    )    //13
    (  $Lx   $Ly      $LzT    )    //14
    (  0     $Ly      $LzT    )    //15
    


    /*
    (  0     0        0        ) //0
    (  $Lx   0        0        ) //1
    (  $Lx   0        $Lzby3   ) //2
    (  0     0        $Lzby3   ) //3
    (  0     $Ly      0        ) //4
    (  $Lx   $Ly      0        ) //5
    (  $Lx   $Ly      $Lzby3   ) //6
    (  0     $Ly      $Lzby3   ) //7
    (  $Lx   0        $Lz2by3  ) //8
    (  0     0        $Lz2by3  ) //9
    (  $Lx   $Ly      $Lz2by3  ) //10
    (  0     $Ly      $Lz2by3  ) //11
    (  $Lx   0        $Lz      ) //12
    (  0     0        $Lz      ) //13
    (  $Lx   $Ly      $Lz      ) //14
    (  0     $Ly      $Lz      ) //15
    */
    
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (128 1 64) simpleGrading (1 1 0.1)
    hex (4 5 6 7 8 9 10 11) (128 1 256) simpleGrading (1 1 1)
    hex (8 9 10 11 12 13 14 15) (128 1 64) simpleGrading (1 1 10)
);

edges
(
);

boundary
(
    front
    {
        type empty;
        faces 
        (
            (0 1 5 4)
            (4 5 9 8)
            (8 9 13 12)
        );
        neighbourPatch back;
    }
    back
    {
        type empty;
        faces 
        (
            (2 3 7 6)
            (6 7 11 10)
            (10 11 15 14)
        );
        neighbourPatch front;
    }
    left
    {
        type cyclic;
        faces 
        (
            (0 4 7 3)
            (4 8 11 7)
            (8 12 15 11)
        );
        neighbourPatch right;
    }
    right
    {
        type cyclic;
        faces 
        (
            (1 2 6 5)
            (5 6 10 9)
            (9 10 14 13)
        );
        neighbourPatch left;
    }
    bottom
    {
        type patch;
        faces
        (
            (0 3 2 1)
        );
    }
    top
    {
        type patch;
        faces
        (
            //(4 5 6 7)
            (12 13 14 15)
        );
    }
);


mergePatchPairs
(
);

// ************************************************************************* //
